function [SupPCAfeat,eigVec] = jake_SupPCA(feat, labels)

% Function for finding the Suprervised Principal Components
% and the transformed features for a data input ('feat') 
% with observations arranged row-wise and classifications 
% ('labels') by finding the eigenvectors of the smallest
% eigenvalues of a matrix feat' * L * feat

% L being the generalised Laplacian of similarities
% L(i,j) = -1, class(feat(i,:)) == class(feat(j,:))
%       =   0, class(feat(i,:)) ~= class(feat(j,:))
% L(i,i) = -sum(L(:,i) - 1

% Count num of vectors and num of dimensions per vector
NumIm = size(feat,1) ;
NumVar= size(feat,2) ;

% Centralise feature data
feat = bsxfun(@minus,feat,mean(feat)) ;

% build Laplacian matrix using labels input
L = zeros(NumIm, NumIm) ;

for i = 1:NumIm
    L(:,i) = - (labels == labels(i)) ;
    L(i,i) = - sum(L(:,i)) - 1 ;
end

Y = feat' * L * feat ;

% find eigenvectors
[eigVec, eigVal] = eig(Y,'vector') ; 

% sort eigenvectors in order of minimum eigenvalues
[eigVal,index] = sort(eigVal,'ascend') ;
eigVec = eigVec(:,index) ;

% transform features using found principal components
SupPCAfeat = feat * eigVec ; 
